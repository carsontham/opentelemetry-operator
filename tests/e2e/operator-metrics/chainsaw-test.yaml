apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: operator-metrics
spec:
  steps:
    - name: step-00
      try:
        - assert:
            file: 00-assert-operator.yaml
    - name: proxy request for operator metrics
      try:
        - command:
            entrypoint: kubectl
            args:
              - get
              - service
              - -n
              - opentelemetry-operator-system
              - -l
              - control-plane=controller-manager
              - -o
              - jsonpath="{.items[0].metadata.name}""
            outputs:
              - name: serviceName
                value: ($stdout)
        - script:
            env:
              - name: serviceName
                value: ($serviceName)
            content: |
              #!/bin/bash
              kubectl get --raw https://${serviceName}:8443/metrics
            outputs:
              - name: metrics
                value: (x_metrics_decode($stdout))
            check:
              ($error == null): true
        - assert:
            resource:
              (length($metrics[?as_string(metric."__name__") == 'workqueue_work_duration_seconds_bucket']) > `0`): true
              (length($metrics[?as_string(metric."__name__") == 'workqueue_work_duration_seconds_sum']) > `0`): true
              (length($metrics[?as_string(metric."__name__") == 'workqueue_work_duration_seconds_count']) > `0`): true
              (length($metrics[?as_string(metric."__name__") == 'workqueue_unfinished_work_seconds']) > `0`): true
              (length($metrics[?as_string(metric."__name__") == 'workqueue_queue_duration_seconds_bucket']) > `0`): true
              (length($metrics[?as_string(metric."__name__") == 'workqueue_queue_duration_seconds_sum']) > `0`): true
              (length($metrics[?as_string(metric."__name__") == 'workqueue_queue_duration_seconds_count']) > `0`): true
              (length($metrics[?as_string(metric."__name__") == 'workqueue_longest_running_processor_seconds']) > `0`): true
